/*
 * Soundcloud Client
 */
var Request = require('./request.js'),
    $ = require('jquery-deferred'),
    host = 'api.soundcloud.com',

    Soundcloud = function(client_id) {
        var _request = new Request(client_id, host);
        
        this.get = {};
        this.get.tracks = this.get.users = this.get.playlists = this.get.groups = this.get.comments = this.get.me = this.get.apps = this.get.resolve = {};


        // TRACKS
        this.get.tracks.id = function (filters, cb) {
            _request._makeGet('tracks', filters, cb);            
        };

        this.get.tracks.comments = function (track_id, cb) {
            _request._makeGet('tracks/' + track_id + '/comments', cb);
        };
        
        this.get.tracks.comments.id = function (track_id, comment_id, cb) {
            _request._makeGet('tracks/' + track_id + '/comments/' + comment_id, cb);
        };
        
        this.get.tracks.favoriters = function (track_id, cb) {
            _request._makeGet('tracks/' + track_id + '/favoriters', cb);
        };
        
        this.get.tracks.shared_users = function (track_id, cb) {
            _request._makeGet('tracks/' + track_id + '/shared-to/users', cb);
        };

        this.get.tracks.shared_emails = function (track_id, cb) {
            _request._makeGet('tracks/' + track_id + '/shared-to/emails', cb);
        };
        
        this.get.tracks.secret_token = function (track_id, cb) {
            _request._makeGet('tracks/' + track_id + '/secret-token', cb);
        };
        
        // USERS

        this.get.users.id = function (user_id, cb) {
            _request._makeGet('users/' + user_id, {}, cb);
        };
        
        this.get.users.tracks = function (user_id, cb) {
            _request._makeGet('users/' + user_id + '/tracks', cb);
        };
        
        this.get.users.playlists = function (user_id, cb) {
            _request._makeGet('users/' + user_id + '/playlists', cb);
        };

        this.get.users.followings = function (user_id, cb) {
            _request._makeGet('users/' + user_id + '/followings', cb);
        };

        this.get.users.followings.id = function (user_id, following_id, cb) {
            _request._makeGet('users/' + user_id + '/followings/' + following_id, cb);
        };

        this.get.users.followers = function (user_id, cb) {
            _request._makeGet('users/' + user_id + '/followers', cb);
        };

        this.get.users.followers.id = function (user_id, follower_id, cb) {
            _request._makeGet('users/' + user_id + '/followers/' + follower_id, cb);
        };

        this.get.users.comments = function (user_id, cb) {
            _request._makeGet('users/' + user_id + '/comments', cb);
        };

        this.get.users.favorites = function (user_id, cb) {
            _request._makeGet('users/' + user_id + '/favorites', cb);
        };

        this.get.users.favorites.id = function (user_id, favorites_id, cb) {
            _request._makeGet('users/' + user_id + '/favorites/' + favorites_id, cb);
        };

        this.get.users.groups = function (user_id, cb) {
            _request._makeGet('users/' + user_id + '/groups', cb);
        };

        this.get.users.web_profiles = function (user_id, cb) {
            _request._makeGet('users/' + user_id + '/web-profiles', cb);
        };

        this.getTimestamp = function(ms) {
            var d = new Date(ms);
            var year = d.getFullYear();
            var month = (d.getMonth() + 1);
            var date = d.getDate();
            var hours = d.getHours();
            var mins = d.getMinutes();
            var secs = d.getSeconds();
            return year + '/' + (month.length === 1 ? '0' + month : month) + '/' + (date.length === 1 ? '0' + date : date) + ' ' + (hours.length === 1 ? '0' + hours : hours) + ':' + (mins.length === 1 ? '0' + mins : mins) + ':' + (secs.length === 1 ? '0' + secs : secs);
        };
        

    };

module.exports = Soundcloud;